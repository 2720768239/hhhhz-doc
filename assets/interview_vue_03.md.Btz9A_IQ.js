import{_ as e,c as r,o as t,a4 as o}from"./chunks/framework.ChnUdrHZ.js";const v=JSON.parse('{"title":"vue 的生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"interview/vue/03.md","filePath":"interview/vue/03.md","lastUpdated":1727076453000}'),i={name:"interview/vue/03.md"},n=o('<h1 id="vue-的生命周期" tabindex="-1">vue 的生命周期 <a class="header-anchor" href="#vue-的生命周期" aria-label="Permalink to &quot;vue 的生命周期&quot;">​</a></h1><ul><li><p>beforeCreate: <strong>组件实例创立之前</strong>，组件的选项对象还没有被创建，也就是说，除了 <code>props</code> 之外的其他选项都不能被访问</p></li><li><p>created: <strong>组件实例已经创建完成</strong>，属性已经绑定，但 DOM 还没有生成，$el 属性目前不可见</p></li><li><p>beforeMount: <strong>组件挂载之前</strong>，相关的 render 函数首次被调用</p></li><li><p>mounted: <strong>组件挂载之后</strong>，DOM 已经生成，$el 属性已经可用</p></li><li><p>beforeUpdate: <strong>组件数据更新之前</strong>，发生在虚拟 DOM 打补丁之前</p></li><li><p>updated: <strong>组件数据更新之后</strong>，发生在虚拟 DOM 打补丁之后</p></li><li><p>beforeDestroy: <strong>组件实例销毁之前</strong>，在这一步，实例仍然完全可用</p></li><li><p>destroyed: <strong>组件实例销毁之后</strong>，所有的事件监听器会被移除，所有的子实例也会被同时销毁</p></li><li><p>active: <strong>keep-alive 组件激活时调用</strong></p></li><li><p>deactivated: <strong>keep-alive 组件停用时调用</strong></p></li><li><p>errorCaptured: <strong>当捕获一个来自子孙组件的错误时被调用</strong>，错误监听 vue.config.errorHandler</p></li><li><p>renderTracked、renderTriggered:</p></li></ul>',2),s=[n];function a(l,p,d,c,_,g){return t(),r("div",null,s)}const f=e(i,[["render",a]]);export{v as __pageData,f as default};
